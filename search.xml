<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>ArchLinux Java环境</title>
    <url>/2020/01/02/ArchLinux-Java%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h1 id="ArchLinux系Java开发环境的管理"><a href="#ArchLinux系Java开发环境的管理" class="headerlink" title="ArchLinux系Java开发环境的管理"></a>ArchLinux系Java开发环境的管理</h1><h2 id="一-开发环境的安装"><a href="#一-开发环境的安装" class="headerlink" title="一.开发环境的安装"></a>一.开发环境的安装</h2><h3 id="1-openjdk安装"><a href="#1-openjdk安装" class="headerlink" title="1.openjdk安装"></a>1.openjdk安装</h3><p><code>pacman -S java-8-jdk</code></p>
<h3 id="2-Oracal-Jdk安装"><a href="#2-Oracal-Jdk安装" class="headerlink" title="2.Oracal Jdk安装"></a>2.Oracal Jdk安装</h3><ul>
<li><p><a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">登入网址</a>下载　<em>jdk-8u231-linux-x64.tar.gz</em></p>
</li>
<li><p>把文件放入<strong><em>Downloads</em></strong>目录</p>
</li>
<li><pre><code class="shell">yay -Syu
yay -S jdk8
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">输出如下内容</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;shell</span><br><span class="line">&#x3D;&#x3D;&gt; Scooping files from &#x2F;home&#x2F;jason&#x2F;Downloads</span><br><span class="line">  -&gt; jdk-8u231-linux-x64.tar.gz</span><br><span class="line">&#x3D;&#x3D;&gt; Making package: jdk8 8u231-1 (Sat 30 Nov 2019 12:08:13 PM CST)</span><br><span class="line">&#x3D;&#x3D;&gt; Retrieving sources...</span><br><span class="line">  -&gt; Found jce_policy-8.zip</span><br><span class="line">  -&gt; Found jdk-8u231-linux-x64.tar.gz</span><br><span class="line">  -&gt; Found jconsole-jdk8.desktop</span><br><span class="line">  -&gt; Found jmc-jdk8.desktop</span><br><span class="line">  -&gt; Found jvisualvm-jdk8.desktop</span><br><span class="line">  -&gt; Found policytool-jdk8.desktop</span><br><span class="line">  -&gt; Found readme.sh</span><br></pre></td></tr></table></figure>

&lt;hr&gt;
</code></pre>
</li>
</ul>
<h2 id="二-jdk的卸载"><a href="#二-jdk的卸载" class="headerlink" title="二.jdk的卸载"></a>二.jdk的卸载</h2><p>执行如下命令:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -R jre8-openjdk jdk8-openjdk jre8-openjdk-headless &amp;&amp; sudo rm -rf /usr/lib/jvm/java-8-openjdk</span><br></pre></td></tr></table></figure>

<hr>

<h2 id="三-Java环境的切换"><a href="#三-Java环境的切换" class="headerlink" title="三.Java环境的切换"></a>三.Java环境的切换</h2><p>使用<code>archlinux-java</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">archlinux-java &lt;COMMAND&gt;</span><br><span class="line"></span><br><span class="line">COMMAND:</span><br><span class="line">        status          List installed Java environments and enabled one</span><br><span class="line">        get             Return the short name of the Java environment set as default</span><br><span class="line">        set &lt;JAVA_ENV&gt;  Force &lt;JAVA_ENV&gt; as default</span><br><span class="line">        unset           Unset current default Java environment</span><br><span class="line">        fix             Fix an invalid/broken default Java environment configuration</span><br></pre></td></tr></table></figure>

<p>例如:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo archlinux-java set java-8-jdk</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>manjaro</tag>
      </tags>
  </entry>
  <entry>
    <title>vue中防止重复点击</title>
    <url>/2020/01/01/vue%E4%B8%AD%E9%98%B2%E6%AD%A2%E9%87%8D%E5%A4%8D%E7%82%B9%E5%87%BB/</url>
    <content><![CDATA[<h2 id="vue中防止重复点击方法"><a href="#vue中防止重复点击方法" class="headerlink" title="vue中防止重复点击方法"></a>vue中防止重复点击方法</h2><h3 id="1-防止狂击"><a href="#1-防止狂击" class="headerlink" title="1.防止狂击"></a>1.防止狂击</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">"#app"</span>,</span><br><span class="line">    data:&#123;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods:&#123;</span><br><span class="line">        login()&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.timer) &#123;</span><br><span class="line">            clearTimeout(<span class="keyword">this</span>.timer);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.timer = setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">            axios.get(<span class="string">"/brand/login/"</span>+id+<span class="string">".do"</span>).then(<span class="function">(<span class="params">result</span>)=&gt;</span>&#123;</span><br><span class="line">                <span class="keyword">this</span>.brand = result.data;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,<span class="number">200</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>有效的阻止在一定的时间内用户的连续点击</p>
<h3 id="2-防止重复点击"><a href="#2-防止重复点击" class="headerlink" title="2.防止重复点击"></a>2.防止重复点击</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">        el:<span class="string">"#app"</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">        flag:<span class="literal">false</span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            login()&#123;</span><br><span class="line">              <span class="keyword">if</span> (<span class="keyword">this</span>.flag) &#123;</span><br><span class="line">                retrun;</span><br><span class="line">             &#125;</span><br><span class="line">            <span class="keyword">this</span>.flag = <span class="literal">true</span>;</span><br><span class="line">            axios.get(<span class="string">"/brand/login/"</span>+id+<span class="string">".do"</span>).then(<span class="function">(<span class="params">result</span>)=&gt;</span>&#123;</span><br><span class="line">                    <span class="keyword">this</span>.brand = result.data;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>虚拟机ESXI6.7的安装和配置</title>
    <url>/2020/01/01/%E8%99%9A%E6%8B%9F%E6%9C%BAESXI6-7%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>由于看了油管上很多UP主的视频安利，看了很多的视频，自己也手痒的入了一个软路由配置如下</p>
<ul>
<li>CPU 3215U</li>
<li>内存 DDR3 4G笔记本低压</li>
<li>8G固态硬盘</li>
<li>4个千兆网口</li>
</ul>
<p>为什么不买j1900或者还是D525其它一些比较不好的U呢，主要还是这个U支持网卡的直通，不想只是装单一的路由系统，说白的其实这对于我这50M的小水管没有什么用，就是为了折腾。目前主流的软路由的系统主要有:</p>
<ul>
<li>openwrt lean开源版 自己可以编译</li>
<li>Koolshare 的LEDE 其余openwrt</li>
<li>爱快软路由系统</li>
<li>ROS路由系统</li>
</ul>
<p>为了玩转这一些系统如果一个个的刷入U盘实体安装就显得太过麻烦，这时就要先安装虚拟机然后再分别的虚拟这些系统，这一来就很好的管理，安装。能用的虚拟系统主要有两个</p>
<ul>
<li>PVE <em>没有使用过，没有对硬件的要求那么高</em></li>
<li>ESXI <em>软路由玩家的常用选择，6.5以上需要4G的内存，网上的教程较多</em></li>
</ul>
<p>对于我个人而言主要还是使用ESXI6.7系统，本篇文章主要还是记录下安装时的一些过程</p>
<h2 id="从官方网站下载ESXI6-7"><a href="#从官方网站下载ESXI6-7" class="headerlink" title="从官方网站下载ESXI6.7"></a>从官方网站下载ESXI6.7</h2><ul>
<li>进入官方网站注册账号：</li>
</ul>
<blockquote>
<p><a href="https://my.vmware.com/cn/web/vmware/login" target="_blank" rel="noopener">https://my.vmware.com/cn/web/vmware/login</a></p>
</blockquote>
<ul>
<li>选择vSphere,进入到下载的页面</li>
<li>把ISO镜像写入U盘，选择U盘启动把，把ESXI系统安装到软路由</li>
<li>机器的BIOS设置为来电启动</li>
<li>配置好ESXI的root密码，打开ssh，并设置好网络</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>EXSI</tag>
        <tag>虚拟机s</tag>
      </tags>
  </entry>
  <entry>
    <title>U盘安装windows和linux</title>
    <url>/2020/01/01/U%E7%9B%98%E5%AE%89%E8%A3%85windows%E5%92%8Clinux/</url>
    <content><![CDATA[<h1 id="为什么要进行此项折腾"><a href="#为什么要进行此项折腾" class="headerlink" title="为什么要进行此项折腾"></a>为什么要进行此项折腾</h1><p>手里有一个WIN TO GO 的U盘，速度非常的快想在里面在安装一个linux的系统来玩玩<br>考虑到自己的linux基础不好，就先装一个ubuntu的系统来体验以下。</p>
<hr>
<h1 id="安装-Windows-To-Go"><a href="#安装-Windows-To-Go" class="headerlink" title="安装 Windows To Go"></a>安装 Windows To Go</h1><p>遵循优先 Windows 再装 Linux 的原则，先搞定 Windows。为了方便，直接使用 nkc3g4 大佬的 GUI 工具 Windows To Go Assistant。这一步需要清空 SSD 上的东西（因为需要重新建立分区表，重新分区），如果上面有东西请提前备份。</p>
<p>从 <a href="https://msdn.itellyou.cn/" target="_blank" rel="noopener">I Tell You</a> 获取最新的 Windows 10 镜像，右键 ISO 镜像装载这个镜像，这样在“此电脑”中就可以挂载出来的虚拟光驱了，如果老版本 Windows 没有这个功能的话，只能用第三方虚拟光驱软件或者直接解压 ISO 了。</p>
<p>以下为回忆的简单的说明，为了能顺利进行，建议你先打开 WTGA 看看里面有啥，也可以先读一下</p>
<p><em><a href="http://bbs.luobotou.org/thread-761-1-1.html" target="_blank" rel="noopener">http://bbs.luobotou.org/thread-761-1-1.html</a></em></p>
<p>打开 WTGA，选中 SSD 所在的盘符，一定要二次确认，要不然就删干净了哦，接着浏览选中 ISO 镜像中 sources/install.wim。</p>
<p>为了最佳的性能，我们选择固定大小的 VHDX 安装方式，勾选 UEFI + MBR 和 固定大小。切换到 VHD 页，建议创建的 VHDX 在 50G 以上，Windows 分区没个 50G 还是挺难生存的hhhhhh</p>
<p>EFI 分区大小其实不需要 350MB，只要有 64MB 以上就行了，甚至可以更小，我没试过了。</p>
<p>磁盘选项卡中勾选 不中转VHD 可以提高 WTG 安装速度。</p>
<p>安装好之后，其实 SSD 会使用 MBR 分区表，有两个主分区，一个 FAT32 的 EFI 分区和一个 NTFS 的数据分区，NTFS 分区中包含系统镜像 VHDX。此时你可以直接重启电脑用 SSD 引导进入这个 WTG 系统进行一些初始化和基本配置。此时已经可以 UEFI 和 MBR 双启动 Windows 了。</p>
<hr>
<h1 id="为-Linux-重新分区"><a href="#为-Linux-重新分区" class="headerlink" title="为 Linux 重新分区"></a>为 Linux 重新分区</h1><p>用分区软件给压缩NTFS分区，留下50G的空间给Ubuntu<br>为了安装的方便可以在分区软件中事先分好区/， /home，/swap</p>
<hr>
<h1 id="安装-Linux"><a href="#安装-Linux" class="headerlink" title="安装 Linux"></a>安装 Linux</h1><p>打开vmware，新建一个ubuntu64位的虚拟机<br><img src="https://i.loli.net/2020/01/01/uv6f7ZqNnXkLhPS.png" alt="UTOOLS1577888854930.png"><br>BIOS的类型选择UEFI<br>移除创建的虚拟硬盘<br>在USB选项卡中选择USB3.0<br><img src="https://i.loli.net/2020/01/01/kjHo67VuahQRdXs.png" alt="UTOOLS1577888915026.png"><br>在安装的过程中一定要把UEFI的引导放到我们事先分好的FAT32格式的EFI分区中</p>
<hr>
<h1 id="配置-Grub2-使其可以支持-BIOS-引导"><a href="#配置-Grub2-使其可以支持-BIOS-引导" class="headerlink" title="配置 Grub2 使其可以支持 BIOS 引导"></a>配置 Grub2 使其可以支持 BIOS 引导</h1><p>由于我们使用的是 MBR 分区表，所以不需要像 GPT 下那样建立 bios_grub 分区。直接使用</p>
<blockquote>
<p>sudo grub2-install –target=i386-pc –recheck /dev/sdx</p>
</blockquote>
<h1 id="引导-Windows-的思路"><a href="#引导-Windows-的思路" class="headerlink" title="引导 Windows 的思路"></a>引导 Windows 的思路</h1><p>参考以下文章得到基本思路</p>
<ul>
<li><a href="http://blog.csdn.net/akeron/article/details/50072413" target="_blank" rel="noopener">Grub2引导VHDX中的Windows</a></li>
<li><a href="https://wzyboy.im/post/1049.html" target="_blank" rel="noopener">BIOS + GPT + GRUB + Linux + Windows 折腾笔记| wzyboy’s blog</a></li>
<li><a href="https://wiki.archlinux.org/index.php/GRUB_(简体中文)#UEFI-GPT_.E6.A8.A1.E5.BC.8F.E4.B8.8B.E5.AE.89.E8.A3.85.E7.9A.84Windows.E7.9A.84.E5.90.AF.E5.8A.A8.E9.A1.B9" target="_blank" rel="noopener">GRUB (简体中文) - Arch Wiki</a></li>
</ul>
<p>难点在于从 VHDX 引导，需要 Windows Boot Manager 二次接管引导。</p>
<p>UEFI 下，我们可以直接使用 chainloader 将启动直接交给 Windows Boot Manager 接管就好，EFI 的 Windows Boot Manager 就在 EFI 分区下 的 /EFI/Microsoft/Boot/bootmgfw.efi。</p>
<p>BIOS 下我们依赖 MBR 中的引导代码，可是 MBR 中的 Windows Boot Manager 已经被 Grub2 覆盖掉了…这时候我们要使用 memdisk 加载一个包含 MBR Windows Boot Manager 的镜像。</p>
<hr>
<h1 id="动手实现"><a href="#动手实现" class="headerlink" title="动手实现"></a>动手实现</h1><p>Windows 下创建一个 VHD 用来保存 Windows Boot Manager。开启一个管理员权限的 Powershell，输入 diskpart 进入 Windows 分区命令行。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 64M 的空间感觉比较合适？也不会浪费很多空间啦，现在机器内存都够大的Create vdisk file&#x3D;C:\bootmgr.vhd maximum&#x3D;64 type&#x3D;fixed Select vdisk file&#x3D;C:\bootmgr.vhd Attach vdisk Create partition primary Active &#x2F;&#x2F; 这一步是 MBR 硬盘上必须的，激活使其可引导 Format label&#x3D;bootmgr quick Assign letter&#x3D;j &#x2F;&#x2F; 分配到 J 盘</span><br></pre></td></tr></table></figure>

<p>exit 退出 diskpart</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">bcdboot C:\windows &#x2F;s J: &#x2F;l zh-cn将引导文件写入这个分区。接着将 SSD 中 EFI 分区中 \Boot\BCD 文件复制到 J:\Boot\BCD，覆盖掉原来的 BCD 配置文件。</span><br></pre></td></tr></table></figure>

<p>SSD 的 EFI 分区可能默认不会分配盘符，可以在 Windows 磁盘管理中手动给其分配盘符，并且你需要在资源管理器选项中取消“隐藏保护的系统文件”和“不显示隐藏的文件”才能看到 /Boot/BCD。<br>到此，前期准备完成，将 vhd 文件拷贝到 NTFS 分区备用。</p>
<hr>
<h1 id="添加-Grub2-Entry"><a href="#添加-Grub2-Entry" class="headerlink" title="添加 Grub2 Entry"></a>添加 Grub2 Entry</h1><p>虚拟机中从 SSD 引导进入 Linux。</p>
<p>编辑 /etc/grub.d/40_custom 以便以后每次 grub2_mkconfig 都包含我们的更改。<br><strong><em>添加以下 entry 用于 UEFI\</em></strong></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menuentry &quot;Windows 10 To Go (UEFI)&quot; &#123;    insmod part_gpt    insmod fat    insmod search_fs_uuid    insmod chain    search --fs-uuid --set&#x3D;root $hints_string $fs_uuid    chainloader &#x2F;EFI&#x2F;Microsoft&#x2F;Boot&#x2F;bootmgfw.efi</span><br></pre></td></tr></table></figure>

<p>}<br>hintsstring和hintsstring和uuid 需要替换，可以通过以下命令获取。</p>
<p>$uuid:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grub-probe --target&#x3D;fs_uuid &#x2F;boot&#x2F;efi&#x2F;EFI&#x2F;Microsoft&#x2F;Boot&#x2F;bootmgfw.efi</span><br></pre></td></tr></table></figure>

<p>$hints_string:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">grub-probe --target&#x3D;hints_string &#x2F;boot&#x2F;efi&#x2F;EFI&#x2F;Microsoft&#x2F;Boot&#x2F;bootmgfw.efi</span><br></pre></td></tr></table></figure>

<h1 id="添加以下-entry-用于-Legacy-BIOS"><a href="#添加以下-entry-用于-Legacy-BIOS" class="headerlink" title="添加以下 entry 用于 Legacy BIOS"></a>添加以下 entry 用于 Legacy BIOS</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menuentry &quot;Windows 10 To Go (Legacy)&quot; &#123;    set root&#x3D;&#39;hd0,msdos3&#39;    echo &#39;Loading memdisk...&#39;    linux16 &#x2F;usr&#x2F;share&#x2F;syslinux&#x2F;memdisk raw    echo &#39;Loading VHD...&#39;    initrd16 &#x2F;boot&#x2F;bootmgr.vhd    echo &#39;Done!&#39;&#125;</span><br></pre></td></tr></table></figure>

<p>复制 bootmgr.vhd 就是我们之前创建的 vhd 到 /boot/ 下，其中第二行的 set root=’hd0,msdos3’，你的 /boot 目录挂载在何处就如何修改，例如，我的安装方案，/boot 与 / 同时挂载在 sda3，那么就是hd0,msdos3。</p>
<p>在系统中安装好 syslinux 其中带有 memdisk，找不到的话，可以</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">find &#x2F; -name memdisk</span><br></pre></td></tr></table></figure>

<p>找找看在什么地方，替换配置文件中 linux16 中的路径。</p>
<p>然后使用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo grub2_mkconfig &gt; grub.cfg</span><br></pre></td></tr></table></figure>

<p>生成 grub.cfg 替换掉原来的 /boot/grub2/grub.cfg，并对其进行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo chown root:root grub.cfgsudo chmod -x grub.cfg</span><br></pre></td></tr></table></figure>

<h1 id="大功告成"><a href="#大功告成" class="headerlink" title="大功告成"></a>大功告成</h1><p>接着就可以重启看看效果了。</p>
<p>UEFI 下就通过 Windows 10 To Go (UEFI) 引导 Windows</p>
<p>BIOS 下就通过 Windows 10 To Go (Legacy) 引导 Windows</p>
<p>两种情况下都通过原有的 Linux Entry 引导 Linux 即可</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>系统</tag>
        <tag>wintogo</tag>
      </tags>
  </entry>
  <entry>
    <title>黑苹果</title>
    <url>/2020/01/01/%E9%BB%91%E8%8B%B9%E6%9E%9C/</url>
    <content><![CDATA[<h1 id="写在之前"><a href="#写在之前" class="headerlink" title="写在之前"></a>写在之前</h1><p>由于之前降价时买了一块联想的NVM的固态硬盘，闲置下来一个不用的256G的SATA3的SSD，不小心在网上看到AMD的ryzen系列也可以支持黑苹果的安装于是我有开始手贱的开始了折腾的道路。写下这篇文章也是记录一下安装的过程与大家分享。本文的安装都是参考的以下网址大家可以看一下</p>
<blockquote>
<p><a href="https://forum.amd-osx.com/viewtopic.php?f=24&amp;t=4127&amp;sid=7839799155c875c4930ee12a1c4193f1" target="_blank" rel="noopener">https://forum.amd-osx.com/viewtopic.php?f=24&amp;t=4127&amp;sid=7839799155c875c4930ee12a1c4193f1</a></p>
</blockquote>
<h1 id="本人电脑的基本配置"><a href="#本人电脑的基本配置" class="headerlink" title="本人电脑的基本配置"></a>本人电脑的基本配置</h1><ul>
<li>CPU AMD Ryzen 1600</li>
<li>显卡 GTX1060</li>
</ul>
<h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><h1 id="1-调整电脑的BIOS设置"><a href="#1-调整电脑的BIOS设置" class="headerlink" title="1.调整电脑的BIOS设置"></a>1.调整电脑的BIOS设置</h1><p>首先开机按F2进入BIOS选单</p>
<ul>
<li><strong>Set your SATA ports to AHCI 把sata设为ahci模式</strong></li>
<li><strong>Enable USB Legacy support and EHCI handoff</strong></li>
<li><strong>Disable your Serial Port 关闭串口</strong></li>
<li><strong>Enable CSM and UEFI for Hard drives and USB devices</strong></li>
<li><strong>Set Secure Boot to Other OS</strong></li>
</ul>
<hr>
<h1 id="2-制作usb启动盘"><a href="#2-制作usb启动盘" class="headerlink" title="2.制作usb启动盘"></a>2.制作usb启动盘</h1><p>电脑安装<code>TransMac</code>，下载好镜像文件<a href="http://bit.ly/2KfegS3" target="_blank" rel="noopener"><code>HighSierraV3Unofficial.dmg</code></a></p>
<p>插入准备好的U盘，U盘数据要转移，打开TransMac<strong>(务必以管理员的方式运行)</strong>，右击要制作启动盘的U盘名称，选择“Format Disk for Mac”</p>
<p><img src="https://upload-images.jianshu.io/upload_images/2919052-28b2ce84afeeea2c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/661/format/webp" alt="img"></p>
<p>格式化之后，右键U盘选择“Restore with Disk Image”，选择mac os x镜像</p>
<p><img src="https://upload-images.jianshu.io/upload_images/2919052-e67e7bbbc85d283a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/661/format/webp" alt="img"></p>
<h1 id="3-开始安装"><a href="#3-开始安装" class="headerlink" title="3. 开始安装"></a>3. 开始安装</h1><p>开机，选择U盘引导系统，进入clover引导界面</p>
<p><img src="https://upload-images.jianshu.io/upload_images/2919052-2691ae97418b283f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt="img"></p>
<p>进入Disk Utility选择一个要安装系统的盘为，抹掉分区，格式化GUID/Extended Journaled，填入你磁盘的名字，这里我选择MACOS</p>
<p>之后退出，选择Reinstall macOS，继续</p>
<p><img src="https://upload-images.jianshu.io/upload_images/2919052-d45a9227623c86cc.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt="img"></p>
<p>选择刚刚建立的磁盘，选择继续，完成后重启</p>
<p>继续选择从U盘系统，进入U盘镜像的引导系统，进入终端输入preinstall，然后输入你之前给系统盘起得名字MACOS,完成后重启。</p>
<p>再次从U盘启动系统选择 “Boot macOS Install from你刚才输入的系统盘名字”</p>
<p>之后会进入安装界面，根据您的硬件，可能需要20到45分钟</p>
<p>完成后重新启动，再次从u盘引导系统，进入u盘系统，终端输入AMD</p>
<p>选择之前选择的系统盘名称MACOS</p>
<p><img src="https://upload-images.jianshu.io/upload_images/2919052-848d103cdf9920e8.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt="img"></p>
<hr>
<p>完成后重启电脑，现在进入u盘引导，选择安装macos的系统盘，开始一步步按照提示安装系统关闭siri，定位。至此mac系统已经安装完毕。</p>
<h1 id="4-设置硬盘引导系统"><a href="#4-设置硬盘引导系统" class="headerlink" title="4.设置硬盘引导系统"></a>4.设置硬盘引导系统</h1><p>安装Clover，Clover Configuraror，挂载U盘和系统盘的EFI分区，把U盘的EFI文件夹复制到系统盘的EfI文件夹，如果想要爽系统就把之前windos备份的efi文件也复制进来</p>
<h1 id="5-安装显卡驱动"><a href="#5-安装显卡驱动" class="headerlink" title="5.安装显卡驱动"></a>5.安装显卡驱动</h1><p>黑苹果队N卡的支持不由好从10.14开始N卡的驱动不能用了。本文安装的是10.13版本的系统，可以使用N’卡的web驱动</p>
<p>从以下链接下载</p>
<ul>
<li><strong>Nvidia Web Driver Download Page</strong></li>
</ul>
<p>下载对应版本的驱动安装即可，安装完后记得载clover中的nvdweb选项上打勾</p>
<h1 id="6-安装usb蓝牙模块驱动"><a href="#6-安装usb蓝牙模块驱动" class="headerlink" title="6.安装usb蓝牙模块驱动"></a>6.安装usb蓝牙模块驱动</h1><p>因为手头上还有一个绿联的usb蓝牙，看了一下国外论坛的资料可以解决</p>
<p>解决办法如下，打开终端输入以下命令</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">curl -s -o ~&#x2F;Desktop&#x2F;ryzenusbfix.sh https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;XLNCs&#x2F;ryzenusbfix&#x2F;master&#x2F;ryzenusbfix.sh &amp;&amp; chmod +x ~&#x2F;Desktop&#x2F;ryzenusbfix.sh &amp;&amp; ~&#x2F;Desktop&#x2F;ryzenusbfix.sh#Orgit clone https:&#x2F;&#x2F;github.com&#x2F;XLNCs&#x2F;ryzenusbfix.git ~&#x2F;Desktop&#x2F;ryzenusbfix &amp;&amp;chmod +x ~&#x2F;Desktop&#x2F;ryzenusbfix&#x2F;ryzenusbfix.sh &amp;&amp;~&#x2F;Desktop&#x2F;ryzenusbfix&#x2F;ryzenusbfix.sh</span><br></pre></td></tr></table></figure>

<p>重启电脑，蓝牙已经可以使用了</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>mac</tag>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux定时任务</title>
    <url>/2019/12/24/Linux%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="LInux定时任务的几种方式"><a href="#LInux定时任务的几种方式" class="headerlink" title="LInux定时任务的几种方式"></a>LInux定时任务的几种方式</h1><h2 id="一-cron表达式"><a href="#一-cron表达式" class="headerlink" title="一.cron表达式"></a>一.cron表达式</h2><h2 id="二-systemd-timer"><a href="#二-systemd-timer" class="headerlink" title="二.systemd-timer"></a>二.systemd-timer</h2><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>cron</tag>
      </tags>
  </entry>
  <entry>
    <title>linux常用软件</title>
    <url>/2019/12/21/linux%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="Manjaro常用软件"><a href="#Manjaro常用软件" class="headerlink" title="Manjaro常用软件"></a>Manjaro常用软件</h1><h2 id="１-系统工具"><a href="#１-系统工具" class="headerlink" title="１.系统工具"></a>１.系统工具</h2><ul>
<li><p><strong>截图工具  Flameshot</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S flameshot</span><br></pre></td></tr></table></figure>



</li>
</ul>
<ul>
<li><p><strong>浏览器  google-chrome</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S  google-chrome</span><br></pre></td></tr></table></figure>
</li>
<li><p>分区工具 <strong>Gparted</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S  gparted</span><br></pre></td></tr></table></figure>
</li>
<li><p>shell工具 <strong>zsh</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S oh-my-zsh</span><br><span class="line"></span><br><span class="line">curl sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"</span><br></pre></td></tr></table></figure>

<p>替换zsh的配置文件为oh-my-zsh</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="安装搜狗输入法"><a href="#安装搜狗输入法" class="headerlink" title="安装搜狗输入法"></a>安装搜狗输入法</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S fcitx-im    #默认全部安装</span><br><span class="line">sudo pacman -S fcitx-configtool</span><br><span class="line">sudo pacman -S fcitx-sogoupinyin</span><br></pre></td></tr></table></figure>

<p>新建~/.xprofile文件，加入如下内容</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export GTK_IM_MODULE=fcitx</span><br><span class="line">export QT_IM_MODULE=fcitx</span><br><span class="line">export XMODIFIERS="@im=fcitx"</span><br></pre></td></tr></table></figure>





</li>
</ul>
<h2 id="２-开发工具"><a href="#２-开发工具" class="headerlink" title="２.开发工具"></a>２.开发工具</h2><ul>
<li><p><strong>java</strong></p>
<p>查看jdk状态</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo archlinux-java status</span><br></pre></td></tr></table></figure>

<p>设置默认jdk</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo archlinux-java set java-12-jdk</span><br></pre></td></tr></table></figure>
</li>
<li><p>maven</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S maven</span><br></pre></td></tr></table></figure>
</li>
<li><p>idea</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yay -S intellij-idea-ultimate-edition</span><br></pre></td></tr></table></figure>
</li>
<li><p>docker</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> </span><br></pre></td></tr></table></figure>



</li>
</ul>
<h2 id="3-常用命令"><a href="#3-常用命令" class="headerlink" title="3.常用命令"></a>3.常用命令</h2><ul>
<li><h4 id="改为国内源"><a href="#改为国内源" class="headerlink" title="改为国内源"></a>改为国内源</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman-mirrors -GB testing -c China</span><br></pre></td></tr></table></figure>

<p>更新系统</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -Syu</span><br></pre></td></tr></table></figure>
</li>
<li><h4 id="修改Home下的目录为英文"><a href="#修改Home下的目录为英文" class="headerlink" title="修改Home下的目录为英文"></a>修改Home下的目录为英文</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.config/user-dirs.dirs</span><br><span class="line"></span><br><span class="line">XDG_DESKTOP_DIR="$HOME/Desktop"</span><br><span class="line">XDG_DOWNLOAD_DIR="$HOME/Download"</span><br><span class="line">XDG_TEMPLATES_DIR="$HOME/Templates"</span><br><span class="line">XDG_PUBLICSHARE_DIR="$HOME/Public"</span><br><span class="line">XDG_DOCUMENTS_DIR="$HOME/Documents"</span><br><span class="line">XDG_MUSIC_DIR="$HOME/Music"</span><br><span class="line">XDG_PICTURES_DIR="$HOME/Pictures"</span><br><span class="line">XDG_VIDEOS_DIR="$HOME/Videos"</span><br></pre></td></tr></table></figure>

<p>将Home目录下的中文目录名改为对应的中文名；</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line">mv 公共 Public</span><br><span class="line">mv 模板 Templates</span><br><span class="line">mv 视频 Videos</span><br><span class="line">mv 图片 Pictures</span><br><span class="line">mv 文档 Documents</span><br><span class="line">mv 下载 Download</span><br><span class="line">mv 音乐 Music</span><br><span class="line">mv 桌面 Desktop</span><br></pre></td></tr></table></figure>
</li>
<li><p>yay</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pacman -S yay</span><br></pre></td></tr></table></figure>

<p>yay 的常用命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yay -S package # 从 AUR 安装软件包</span><br><span class="line">yay -Rns package # 删除包</span><br><span class="line">yay -Syu # 升级所有已安装的包</span><br><span class="line">yay -Ps # 打印系统统计信息</span><br><span class="line">yay -Qi package # 检查安装的版本</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h2 id="4-外观美化"><a href="#4-外观美化" class="headerlink" title="4.外观美化"></a>4.外观美化</h2><ul>
<li><p>dock <strong>latte</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pacman -S latte</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="5-其他常用软件"><a href="#5-其他常用软件" class="headerlink" title="5.其他常用软件"></a>5.其他常用软件</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> deepin 系的软件</span></span><br><span class="line">sudo pacman -S deepin-picker # 深度取色器</span><br><span class="line">sudo pacman -S deepin-screen-recorder # 录屏软件，可以录制 Gif 或者 MP4 格式</span><br><span class="line">sudo pacman -S deepin-screenshot # 深度截图</span><br><span class="line">sudo pacman -S deepin-system-monitor # 系统状态监控</span><br><span class="line">yay -s deepin-wine-wechat</span><br><span class="line">yay -S deepin-wine-tim</span><br><span class="line">yay -S deepin-wine-baidupan</span><br><span class="line">yay -S deepin.com.thunderspeed</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开发软件</span></span><br><span class="line">sudo pacman -S jdk8-openjdk</span><br><span class="line">sudo pacman -S make</span><br><span class="line">sudo pacman -S cmake</span><br><span class="line">sudo pacman -S clang</span><br><span class="line">sudo pacman -S nodejs</span><br><span class="line">sudo pacman -S npm</span><br><span class="line">sudo pacman -S goland</span><br><span class="line">sudo pacman -S vim</span><br><span class="line">sudo pacman -S maven</span><br><span class="line">sudo pacman -S pycharm-professional # Python IDE</span><br><span class="line">sudo pacman -S intellij-idea-ultimate-edition # JAVA IDE</span><br><span class="line">sudo pacman -S goland # Go IDE</span><br><span class="line">sudo pacman -S visual-studio-code-bin # vscode</span><br><span class="line">sudo pacman -S qtcreator # 一款QT开发软件</span><br><span class="line">sudo pacman -S postman-bin</span><br><span class="line">sudo pacman -S insomnia # REST模拟工具</span><br><span class="line">sudo pacman -S gitkraken # GIT管理工具</span><br><span class="line">sudo pacman -S wireshark-qt # 抓包</span><br><span class="line">sudo pacman -S zeal</span><br><span class="line">sudo pacman -S gitkraken # Git 管理工具</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 办公软件</span></span><br><span class="line">sudo pacman -S google-chrome</span><br><span class="line">sudo pacman -S foxitreader # pdf 阅读</span><br><span class="line">sudo pacman -S bookworm # 电子书阅读</span><br><span class="line">sudo pacman -S unrar unzip p7zip</span><br><span class="line">sudo pacman -S goldendict # 翻译、取词</span><br><span class="line">sudo pacman -S wps-office</span><br><span class="line">yay -S typora # markdown 编辑</span><br><span class="line">yay -S electron-ssr # 缺少我需要的加密算法</span><br><span class="line">yay -S xmind</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设计</span></span><br><span class="line">sudo pacman -S pencil # 免费开源界面原型图绘制工具</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 娱乐软件</span></span><br><span class="line">sudo pacman -S netease-cloud-music</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 下载软件</span></span><br><span class="line">sudo pacman -S aria2</span><br><span class="line">sudo pacman -S filezilla  # FTP/SFTP</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 图形</span></span><br><span class="line">sudo pacman -S gimp # 修图</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 系统工具</span></span><br><span class="line">sudo pacman -S albert #类似Mac Spotlight，另外一款https://cerebroapp.com/</span><br><span class="line">yay -S copyq #  剪贴板工具，类似 Windows 上的 Ditto</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 终端</span></span><br><span class="line">sudo pacman -S screenfetch # 终端打印出你的系统信息，screenfetch -A 'Arch Linux'</span><br><span class="line">sudo pacman -S htop</span><br><span class="line">sudo pacman -S bat</span><br><span class="line">sudo pacman -S yakuake # 堪称 KDE 下的终端神器，KDE 已经自带，F12 可以唤醒</span><br><span class="line">sudo pacman -S net-tools # 这样可以使用 ifconfig 和 netstat</span><br><span class="line">yay -S tldr</span><br><span class="line">yay -S tig # 命令行下的 git 历史查看工具</span><br><span class="line">yay -S tree</span><br><span class="line">yay -S ncdu # 命令行下的磁盘分析器，支持Vim操作</span><br><span class="line">yay -S mosh # 一款速度更快的 ssh 工具，网络不稳定时使用有奇效</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>软件</tag>
      </tags>
  </entry>
  <entry>
    <title>linux备份命令</title>
    <url>/2019/12/21/linux%E5%A4%87%E4%BB%BD%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="Linux系统备份命令"><a href="#Linux系统备份命令" class="headerlink" title="Linux系统备份命令"></a>Linux系统备份命令</h1><h2 id="一-tar备份"><a href="#一-tar备份" class="headerlink" title="一.tar备份"></a>一.tar备份</h2><h3 id="1-备份"><a href="#1-备份" class="headerlink" title="1.备份"></a><strong>1.备份</strong></h3><p>用root权限，运行完整的备份命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -cvpzf /media/disk/backup.tgz / --exclude=/proc --exclude=/lost+found --exclude=/tmp --exclude=/sys --exclude=/media --exclude=/home</span><br></pre></td></tr></table></figure>

<p>接着，让我们稍微解释一下：<br><code>-cvpzf</code>是我们给tar加的选项。</p>
<p><code>/media/disk/backup.tgz</code>是压缩包的存放路径与名称。<br>* <code>‘/&#39;</code>是我们想要备份的目录，我们想要备份根目录下的所有的东西，所以使用 / 作为根目录。<br>*‘<code>--exclude&#39;</code>就是我们要剔除的目录了。<br>有些目录是不需要备份的。如：/proc目录、 /tmp目录、/sys目录，里面都是临时文件，备份容易出错，/home目录备份容易引起”tar: 由于前面延迟的错误而退出”的提示。 同时确保你没有任何东西挂载在/mnt、/media目录内，否则，会把被挂载的分区也备份在内，备份文件会很大。还要注意不要把备份文件本身也备份进去了，也需要剔除。</p>
<p>备份结束以后，在你的/media/disk目录下有一个backup.tgz ，这就是你的备份文件。</p>
<h3 id="2-恢复备份"><a href="#2-恢复备份" class="headerlink" title="2.恢复备份"></a><strong>2.恢复备份</strong></h3><p>慎用，将会把你目标路径下的所有同名文件替换成压缩文档里的文件，目标路径下多出的目录与文件并不会必删除。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo tar -xvpzf backup.tgz -C /</span><br></pre></td></tr></table></figure>

<p>注：参数x是告诉tar程序解压缩备份文件。 -C 参数是指定tar程序解压缩到的目录。</p>
<p>恢复完了以后，再手工建立如下一些目录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir proc</span><br><span class="line">mkdir lost+found</span><br><span class="line">mkdir sys</span><br><span class="line">mkdir tmp</span><br><span class="line">mkdir media</span><br></pre></td></tr></table></figure>

<p>重启</p>
<p>重启</p>
<h2 id="二-Rsync备份"><a href="#二-Rsync备份" class="headerlink" title="二.Rsync备份"></a>二.Rsync备份</h2><ol>
<li><h3 id="全部备份"><a href="#全部备份" class="headerlink" title="全部备份"></a>全部备份</h3><p>首先,插入usb设备.然后通过<code>fdisk -l</code>命令列出设备名,我的u盘名为<code>/dev/sdb1</code>.然后使用如下命令，</p>
<p>在这里我把磁盘挂载到<code>/mnt</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mount /dev/sdb1 /mnt</span><br></pre></td></tr></table></figure>

<p>要备份整个系统,使用如下命令:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo rsync -aAXv / --exclude=&#123;<span class="string">"/dev/*"</span>,<span class="string">"/proc/*"</span>,<span class="string">"/sys/*"</span>,<span class="string">"/tmp/*"</span>,<span class="string">"/run/*"</span>,<span class="string">"/mnt/*"</span>,<span class="string">"/media/*"</span>,<span class="string">"/lost+found"</span>&#125; /mnt</span></span><br></pre></td></tr></table></figure>

<p>This command will backup the entire root ( <strong>/</strong> ) directory, excluding /dev, /proc, /sys, /tmp, /run, /mnt, /media, /lost+found directories, and save the data in <strong>/mnt</strong> folder.</p>
</li>
</ol>
<h2 id="三-使用再生龙"><a href="#三-使用再生龙" class="headerlink" title="三.使用再生龙"></a>三.使用再生龙</h2><p>使用<a href="https://clonezilla.nchc.org.tw/intro/" target="_blank" rel="noopener">再生龙</a>，下载对应的iso镜像，刻录到U盘.然后从u盘启动,进入界面操作.</p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
</search>
